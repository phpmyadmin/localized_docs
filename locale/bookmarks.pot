# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012 - 2025, The phpMyAdmin devel team
# This file is distributed under the same license as the phpMyAdmin package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: phpMyAdmin 6.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-25 16:21+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../phpmyadmin/docs/bookmarks.rst:4
msgid "Bookmarks"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:8
msgid "You need to have configured the :ref:`linked-tables` for using bookmarks feature."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:12
msgid "Storing bookmarks"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:14
msgid "Any query that is executed can be marked as a bookmark on the page where the results are displayed. You will find a button labeled :guilabel:`Bookmark this query` just at the end of the page. As soon as you have stored a bookmark, that query is linked to the database. You can now access a bookmark dropdown on each page where the query box appears on for that database."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:21
msgid "Variables inside bookmarks"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:23
msgid "Inside a query, you can also add placeholders for variables. This is done by inserting into the query SQL comments between ``/*`` and ``*/``. The special string ``[VARIABLE{variable-number}]`` is used inside the comments. Be aware that the whole query minus the SQL comments must be valid by itself, otherwise you won't be able to store it as a bookmark. Also, note that the text 'VARIABLE' is case-sensitive."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:30
msgid "When you execute the bookmark, everything typed into the *Variables* input boxes on the query box page will replace the strings ``/*[VARIABLE{variable-number}]*/`` in your stored query."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:34
msgid "Also remember, that everything else inside the ``/*[VARIABLE{variable-number}]*/`` string for your query will remain the way it is, but will be stripped of the ``/**/`` chars. So you can use:"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:42
msgid "which will be expanded to"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:48
msgid "in your query, where VARIABLE1 is the string you entered in the Variable 1 input box."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:50
msgid "A more complex example, say you have stored this query:"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:56
msgid "If you wish to enter \"phpMyAdmin\" as the variable for the stored query, the full query will be:"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:63
msgid "**NOTE THE ABSENCE OF SPACES** inside the ``/**/`` construct. Any spaces inserted there will be later also inserted as spaces in your query and may lead to unexpected results especially when using the variable expansion inside of a \"LIKE ''\" expression."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:69
msgid "Browsing a table using a bookmark"
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:71
msgid "When a bookmark has the same name as the table, it will be used as the query when browsing this table."
msgstr ""

#: ../phpmyadmin/docs/bookmarks.rst:76
msgid ":ref:`faqbookmark`, :ref:`faq6_22`"
msgstr ""
